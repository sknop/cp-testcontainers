plugins {
    id 'java'
}

apply plugin: 'maven'

group = 'com.github.christophschubert'
version = '0.2.0-SNAPSHOT'

sourceCompatibility = 1.11

ext {
    confluentVersion = '6.2.0'
    kafkaVersion = '2.8.0'
}

repositories {
    mavenCentral()

    maven {
        url 'https://packages.confluent.io/maven'
    }
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

task integrationTest(type: Test) {
    description = "Runs integration tests"
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest


dependencies {


    compile group: 'org.apache.kafka', name: 'connect-api', version: kafkaVersion
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: kafkaVersion

    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: confluentVersion

    compile "org.testcontainers:testcontainers:1.15.1"
    compile "org.testcontainers:kafka:1.15.1"

    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.29'

    intTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: '4.3.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'


    // for localstack/S3 connector integration test
    intTestImplementation "org.testcontainers:localstack:1.15.1"
    intTestImplementation group: 'com.amazonaws', name: 'aws-java-sdk-core', version: '1.11.926'
    intTestImplementation group: 'software.amazon.awssdk', name: 's3', version: '2.15.53'


    intTestImplementation "org.testcontainers:junit-jupiter:1.15.1"
}

test {
    useJUnitPlatform()
}

integrationTest {
   // forkEvery 1
}


